Terminals unused in grammar

   STRUCT
   BREAK
   NEXT
   INV_COMMA
   OR
   AND
   NOT
   MOD
   POW
   LRPAR
   RRPAR


Gramática

    0 $accept: program $end

    1 program: decls

    2 decls: decl
    3      | decl decls

    4 decl: ids COLON type SEMI
    5     | ids COLON type ASSIGN exp SEMI
    6     | ID LPAR RPAR COLON type LCPAR stmts RCPAR SEMI
    7     | ID LPAR argdefs RPAR COLON type LCPAR stmts RCPAR SEMI
    8     | DEFINE ID type SEMI

    9 argdefs: argdef
   10        | argdef COMMA argdefs

   11 argdef: ID COLON type

   12 stmts: stmt
   13      | stmt stmts

   14 stmt: decl
   15     | ID exp SEMI
   16     | ID ASSIGN exp SEMI
   17     | IF exp THEN LCPAR stmts RCPAR SEMI
   18     | IF exp THEN LCPAR stmts RCPAR ELSE LCPAR stmts RCPAR SEMI
   19     | WHILE exp DO LCPAR stmts RCPAR SEMI
   20     | RETURN exp SEMI
   21     | PRINT exp SEMI
   22     | INPUT exp SEMI

   23 ids: ID
   24    | ID COMMA ids

   25 type: T_INT
   26     | T_FLOAT
   27     | T_STRING
   28     | T_BOOL
   29     | VOID

   30 exp: INTLIT
   31    | STRINGLIT
   32    | FLOATLIT
   33    | BOOLLIT
   34    | ID
   35    | exp ADD exp
   36    | exp SUB exp
   37    | exp MUL exp
   38    | exp DIV exp
   39    | exp EQ_OP exp
   40    | exp LT_OP exp
   41    | exp GT_OP exp
   42    | exp LET_OP exp
   43    | exp GET_OP exp
   44    | exp NE_OP exp
   45    | LPAR exp RPAR
   46    | ID LPAR exp RPAR


Terminais, com as regras aonde aparecem

$end (0) 0
error (256)
ID (258) 6 7 8 11 15 16 23 24 34 46
INTLIT (259) 30
FLOATLIT (260) 32
STRINGLIT (261) 31
BOOLLIT (262) 33
T_INT (263) 25
T_FLOAT (264) 26
T_STRING (265) 27
T_BOOL (266) 28
VOID (267) 29
DEFINE (268) 8
RETURN (269) 20
STRUCT (270)
WHILE (271) 19
IF (272) 17 18
THEN (273) 17 18
DO (274) 19
PRINT (275) 21
INPUT (276) 22
ELSE (277) 18
BREAK (278)
NEXT (279)
COLON (280) 4 5 6 7 11
ASSIGN (281) 5 16
COMMA (282) 10 24
SEMI (283) 4 5 6 7 8 15 16 17 18 19 20 21 22
INV_COMMA (284)
OR (285)
AND (286)
NOT (287)
MOD (288)
EQ_OP (289) 39
NE_OP (290) 44
GET_OP (291) 43
LET_OP (292) 42
GT_OP (293) 41
LT_OP (294) 40
SUB (295) 36
ADD (296) 35
MUL (297) 37
DIV (298) 38
POW (299)
LCPAR (300) 6 7 17 18 19
RCPAR (301) 6 7 17 18 19
LRPAR (302)
RRPAR (303)
LPAR (304) 6 7 45 46
RPAR (305) 6 7 45 46


Não-terminais, com as regras aonde aparecem

$accept (51)
    à esquerda: 0
program (52)
    à esquerda: 1, à direita: 0
decls (53)
    à esquerda: 2 3, à direita: 1 3
decl (54)
    à esquerda: 4 5 6 7 8, à direita: 2 3 14
argdefs (55)
    à esquerda: 9 10, à direita: 7 10
argdef (56)
    à esquerda: 11, à direita: 9 10
stmts (57)
    à esquerda: 12 13, à direita: 6 7 13 17 18 19
stmt (58)
    à esquerda: 14 15 16 17 18 19 20 21 22, à direita: 12 13
ids (59)
    à esquerda: 23 24, à direita: 4 5 24
type (60)
    à esquerda: 25 26 27 28 29, à direita: 4 5 6 7 8 11
exp (61)
    à esquerda: 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46,
    à direita: 5 15 16 17 18 19 20 21 22 35 36 37 38 39 40 41 42 43
    44 45 46


Estado0

    0 $accept: . program $end

    ID      fazer shift, e ir para o estado 1
    DEFINE  fazer shift, e ir para o estado 2

    program  ir para o estado 3
    decls    ir para o estado 4
    decl     ir para o estado 5
    ids      ir para o estado 6


Estado1

    6 decl: ID . LPAR RPAR COLON type LCPAR stmts RCPAR SEMI
    7     | ID . LPAR argdefs RPAR COLON type LCPAR stmts RCPAR SEMI
   23 ids: ID .
   24    | ID . COMMA ids

    COMMA  fazer shift, e ir para o estado 7
    LPAR   fazer shift, e ir para o estado 8

    $default  reduzir usando a regra 23 (ids)


Estado2

    8 decl: DEFINE . ID type SEMI

    ID  fazer shift, e ir para o estado 9


Estado3

    0 $accept: program . $end

    $end  fazer shift, e ir para o estado 10


Estado4

    1 program: decls .

    $default  reduzir usando a regra 1 (program)


Estado5

    2 decls: decl .
    3      | decl . decls

    ID      fazer shift, e ir para o estado 1
    DEFINE  fazer shift, e ir para o estado 2

    $default  reduzir usando a regra 2 (decls)

    decls  ir para o estado 11
    decl   ir para o estado 5
    ids    ir para o estado 6


Estado6

    4 decl: ids . COLON type SEMI
    5     | ids . COLON type ASSIGN exp SEMI

    COLON  fazer shift, e ir para o estado 12


Estado7

   24 ids: ID COMMA . ids

    ID  fazer shift, e ir para o estado 13

    ids  ir para o estado 14


Estado8

    6 decl: ID LPAR . RPAR COLON type LCPAR stmts RCPAR SEMI
    7     | ID LPAR . argdefs RPAR COLON type LCPAR stmts RCPAR SEMI

    ID    fazer shift, e ir para o estado 15
    RPAR  fazer shift, e ir para o estado 16

    argdefs  ir para o estado 17
    argdef   ir para o estado 18


Estado9

    8 decl: DEFINE ID . type SEMI

    T_INT     fazer shift, e ir para o estado 19
    T_FLOAT   fazer shift, e ir para o estado 20
    T_STRING  fazer shift, e ir para o estado 21
    T_BOOL    fazer shift, e ir para o estado 22
    VOID      fazer shift, e ir para o estado 23

    type  ir para o estado 24


Estado10

    0 $accept: program $end .

    $default  aceite


Estado11

    3 decls: decl decls .

    $default  reduzir usando a regra 3 (decls)


Estado12

    4 decl: ids COLON . type SEMI
    5     | ids COLON . type ASSIGN exp SEMI

    T_INT     fazer shift, e ir para o estado 19
    T_FLOAT   fazer shift, e ir para o estado 20
    T_STRING  fazer shift, e ir para o estado 21
    T_BOOL    fazer shift, e ir para o estado 22
    VOID      fazer shift, e ir para o estado 23

    type  ir para o estado 25


Estado13

   23 ids: ID .
   24    | ID . COMMA ids

    COMMA  fazer shift, e ir para o estado 7

    $default  reduzir usando a regra 23 (ids)


Estado14

   24 ids: ID COMMA ids .

    $default  reduzir usando a regra 24 (ids)


Estado15

   11 argdef: ID . COLON type

    COLON  fazer shift, e ir para o estado 26


Estado16

    6 decl: ID LPAR RPAR . COLON type LCPAR stmts RCPAR SEMI

    COLON  fazer shift, e ir para o estado 27


Estado17

    7 decl: ID LPAR argdefs . RPAR COLON type LCPAR stmts RCPAR SEMI

    RPAR  fazer shift, e ir para o estado 28


Estado18

    9 argdefs: argdef .
   10        | argdef . COMMA argdefs

    COMMA  fazer shift, e ir para o estado 29

    $default  reduzir usando a regra 9 (argdefs)


Estado19

   25 type: T_INT .

    $default  reduzir usando a regra 25 (type)


Estado20

   26 type: T_FLOAT .

    $default  reduzir usando a regra 26 (type)


Estado21

   27 type: T_STRING .

    $default  reduzir usando a regra 27 (type)


Estado22

   28 type: T_BOOL .

    $default  reduzir usando a regra 28 (type)


Estado23

   29 type: VOID .

    $default  reduzir usando a regra 29 (type)


Estado24

    8 decl: DEFINE ID type . SEMI

    SEMI  fazer shift, e ir para o estado 30


Estado25

    4 decl: ids COLON type . SEMI
    5     | ids COLON type . ASSIGN exp SEMI

    ASSIGN  fazer shift, e ir para o estado 31
    SEMI    fazer shift, e ir para o estado 32


Estado26

   11 argdef: ID COLON . type

    T_INT     fazer shift, e ir para o estado 19
    T_FLOAT   fazer shift, e ir para o estado 20
    T_STRING  fazer shift, e ir para o estado 21
    T_BOOL    fazer shift, e ir para o estado 22
    VOID      fazer shift, e ir para o estado 23

    type  ir para o estado 33


Estado27

    6 decl: ID LPAR RPAR COLON . type LCPAR stmts RCPAR SEMI

    T_INT     fazer shift, e ir para o estado 19
    T_FLOAT   fazer shift, e ir para o estado 20
    T_STRING  fazer shift, e ir para o estado 21
    T_BOOL    fazer shift, e ir para o estado 22
    VOID      fazer shift, e ir para o estado 23

    type  ir para o estado 34


Estado28

    7 decl: ID LPAR argdefs RPAR . COLON type LCPAR stmts RCPAR SEMI

    COLON  fazer shift, e ir para o estado 35


Estado29

   10 argdefs: argdef COMMA . argdefs

    ID  fazer shift, e ir para o estado 15

    argdefs  ir para o estado 36
    argdef   ir para o estado 18


Estado30

    8 decl: DEFINE ID type SEMI .

    $default  reduzir usando a regra 8 (decl)


Estado31

    5 decl: ids COLON type ASSIGN . exp SEMI

    ID         fazer shift, e ir para o estado 37
    INTLIT     fazer shift, e ir para o estado 38
    FLOATLIT   fazer shift, e ir para o estado 39
    STRINGLIT  fazer shift, e ir para o estado 40
    BOOLLIT    fazer shift, e ir para o estado 41
    LPAR       fazer shift, e ir para o estado 42

    exp  ir para o estado 43


Estado32

    4 decl: ids COLON type SEMI .

    $default  reduzir usando a regra 4 (decl)


Estado33

   11 argdef: ID COLON type .

    $default  reduzir usando a regra 11 (argdef)


Estado34

    6 decl: ID LPAR RPAR COLON type . LCPAR stmts RCPAR SEMI

    LCPAR  fazer shift, e ir para o estado 44


Estado35

    7 decl: ID LPAR argdefs RPAR COLON . type LCPAR stmts RCPAR SEMI

    T_INT     fazer shift, e ir para o estado 19
    T_FLOAT   fazer shift, e ir para o estado 20
    T_STRING  fazer shift, e ir para o estado 21
    T_BOOL    fazer shift, e ir para o estado 22
    VOID      fazer shift, e ir para o estado 23

    type  ir para o estado 45


Estado36

   10 argdefs: argdef COMMA argdefs .

    $default  reduzir usando a regra 10 (argdefs)


Estado37

   34 exp: ID .
   46    | ID . LPAR exp RPAR

    LPAR  fazer shift, e ir para o estado 46

    $default  reduzir usando a regra 34 (exp)


Estado38

   30 exp: INTLIT .

    $default  reduzir usando a regra 30 (exp)


Estado39

   32 exp: FLOATLIT .

    $default  reduzir usando a regra 32 (exp)


Estado40

   31 exp: STRINGLIT .

    $default  reduzir usando a regra 31 (exp)


Estado41

   33 exp: BOOLLIT .

    $default  reduzir usando a regra 33 (exp)


Estado42

   45 exp: LPAR . exp RPAR

    ID         fazer shift, e ir para o estado 37
    INTLIT     fazer shift, e ir para o estado 38
    FLOATLIT   fazer shift, e ir para o estado 39
    STRINGLIT  fazer shift, e ir para o estado 40
    BOOLLIT    fazer shift, e ir para o estado 41
    LPAR       fazer shift, e ir para o estado 42

    exp  ir para o estado 47


Estado43

    5 decl: ids COLON type ASSIGN exp . SEMI
   35 exp: exp . ADD exp
   36    | exp . SUB exp
   37    | exp . MUL exp
   38    | exp . DIV exp
   39    | exp . EQ_OP exp
   40    | exp . LT_OP exp
   41    | exp . GT_OP exp
   42    | exp . LET_OP exp
   43    | exp . GET_OP exp
   44    | exp . NE_OP exp

    SEMI    fazer shift, e ir para o estado 48
    EQ_OP   fazer shift, e ir para o estado 49
    NE_OP   fazer shift, e ir para o estado 50
    GET_OP  fazer shift, e ir para o estado 51
    LET_OP  fazer shift, e ir para o estado 52
    GT_OP   fazer shift, e ir para o estado 53
    LT_OP   fazer shift, e ir para o estado 54
    SUB     fazer shift, e ir para o estado 55
    ADD     fazer shift, e ir para o estado 56
    MUL     fazer shift, e ir para o estado 57
    DIV     fazer shift, e ir para o estado 58


Estado44

    6 decl: ID LPAR RPAR COLON type LCPAR . stmts RCPAR SEMI

    ID      fazer shift, e ir para o estado 59
    DEFINE  fazer shift, e ir para o estado 2
    RETURN  fazer shift, e ir para o estado 60
    WHILE   fazer shift, e ir para o estado 61
    IF      fazer shift, e ir para o estado 62
    PRINT   fazer shift, e ir para o estado 63
    INPUT   fazer shift, e ir para o estado 64

    decl   ir para o estado 65
    stmts  ir para o estado 66
    stmt   ir para o estado 67
    ids    ir para o estado 6


Estado45

    7 decl: ID LPAR argdefs RPAR COLON type . LCPAR stmts RCPAR SEMI

    LCPAR  fazer shift, e ir para o estado 68


Estado46

   46 exp: ID LPAR . exp RPAR

    ID         fazer shift, e ir para o estado 37
    INTLIT     fazer shift, e ir para o estado 38
    FLOATLIT   fazer shift, e ir para o estado 39
    STRINGLIT  fazer shift, e ir para o estado 40
    BOOLLIT    fazer shift, e ir para o estado 41
    LPAR       fazer shift, e ir para o estado 42

    exp  ir para o estado 69


Estado47

   35 exp: exp . ADD exp
   36    | exp . SUB exp
   37    | exp . MUL exp
   38    | exp . DIV exp
   39    | exp . EQ_OP exp
   40    | exp . LT_OP exp
   41    | exp . GT_OP exp
   42    | exp . LET_OP exp
   43    | exp . GET_OP exp
   44    | exp . NE_OP exp
   45    | LPAR exp . RPAR

    EQ_OP   fazer shift, e ir para o estado 49
    NE_OP   fazer shift, e ir para o estado 50
    GET_OP  fazer shift, e ir para o estado 51
    LET_OP  fazer shift, e ir para o estado 52
    GT_OP   fazer shift, e ir para o estado 53
    LT_OP   fazer shift, e ir para o estado 54
    SUB     fazer shift, e ir para o estado 55
    ADD     fazer shift, e ir para o estado 56
    MUL     fazer shift, e ir para o estado 57
    DIV     fazer shift, e ir para o estado 58
    RPAR    fazer shift, e ir para o estado 70


Estado48

    5 decl: ids COLON type ASSIGN exp SEMI .

    $default  reduzir usando a regra 5 (decl)


Estado49

   39 exp: exp EQ_OP . exp

    ID         fazer shift, e ir para o estado 37
    INTLIT     fazer shift, e ir para o estado 38
    FLOATLIT   fazer shift, e ir para o estado 39
    STRINGLIT  fazer shift, e ir para o estado 40
    BOOLLIT    fazer shift, e ir para o estado 41
    LPAR       fazer shift, e ir para o estado 42

    exp  ir para o estado 71


Estado50

   44 exp: exp NE_OP . exp

    ID         fazer shift, e ir para o estado 37
    INTLIT     fazer shift, e ir para o estado 38
    FLOATLIT   fazer shift, e ir para o estado 39
    STRINGLIT  fazer shift, e ir para o estado 40
    BOOLLIT    fazer shift, e ir para o estado 41
    LPAR       fazer shift, e ir para o estado 42

    exp  ir para o estado 72


Estado51

   43 exp: exp GET_OP . exp

    ID         fazer shift, e ir para o estado 37
    INTLIT     fazer shift, e ir para o estado 38
    FLOATLIT   fazer shift, e ir para o estado 39
    STRINGLIT  fazer shift, e ir para o estado 40
    BOOLLIT    fazer shift, e ir para o estado 41
    LPAR       fazer shift, e ir para o estado 42

    exp  ir para o estado 73


Estado52

   42 exp: exp LET_OP . exp

    ID         fazer shift, e ir para o estado 37
    INTLIT     fazer shift, e ir para o estado 38
    FLOATLIT   fazer shift, e ir para o estado 39
    STRINGLIT  fazer shift, e ir para o estado 40
    BOOLLIT    fazer shift, e ir para o estado 41
    LPAR       fazer shift, e ir para o estado 42

    exp  ir para o estado 74


Estado53

   41 exp: exp GT_OP . exp

    ID         fazer shift, e ir para o estado 37
    INTLIT     fazer shift, e ir para o estado 38
    FLOATLIT   fazer shift, e ir para o estado 39
    STRINGLIT  fazer shift, e ir para o estado 40
    BOOLLIT    fazer shift, e ir para o estado 41
    LPAR       fazer shift, e ir para o estado 42

    exp  ir para o estado 75


Estado54

   40 exp: exp LT_OP . exp

    ID         fazer shift, e ir para o estado 37
    INTLIT     fazer shift, e ir para o estado 38
    FLOATLIT   fazer shift, e ir para o estado 39
    STRINGLIT  fazer shift, e ir para o estado 40
    BOOLLIT    fazer shift, e ir para o estado 41
    LPAR       fazer shift, e ir para o estado 42

    exp  ir para o estado 76


Estado55

   36 exp: exp SUB . exp

    ID         fazer shift, e ir para o estado 37
    INTLIT     fazer shift, e ir para o estado 38
    FLOATLIT   fazer shift, e ir para o estado 39
    STRINGLIT  fazer shift, e ir para o estado 40
    BOOLLIT    fazer shift, e ir para o estado 41
    LPAR       fazer shift, e ir para o estado 42

    exp  ir para o estado 77


Estado56

   35 exp: exp ADD . exp

    ID         fazer shift, e ir para o estado 37
    INTLIT     fazer shift, e ir para o estado 38
    FLOATLIT   fazer shift, e ir para o estado 39
    STRINGLIT  fazer shift, e ir para o estado 40
    BOOLLIT    fazer shift, e ir para o estado 41
    LPAR       fazer shift, e ir para o estado 42

    exp  ir para o estado 78


Estado57

   37 exp: exp MUL . exp

    ID         fazer shift, e ir para o estado 37
    INTLIT     fazer shift, e ir para o estado 38
    FLOATLIT   fazer shift, e ir para o estado 39
    STRINGLIT  fazer shift, e ir para o estado 40
    BOOLLIT    fazer shift, e ir para o estado 41
    LPAR       fazer shift, e ir para o estado 42

    exp  ir para o estado 79


Estado58

   38 exp: exp DIV . exp

    ID         fazer shift, e ir para o estado 37
    INTLIT     fazer shift, e ir para o estado 38
    FLOATLIT   fazer shift, e ir para o estado 39
    STRINGLIT  fazer shift, e ir para o estado 40
    BOOLLIT    fazer shift, e ir para o estado 41
    LPAR       fazer shift, e ir para o estado 42

    exp  ir para o estado 80


Estado59

    6 decl: ID . LPAR RPAR COLON type LCPAR stmts RCPAR SEMI
    7     | ID . LPAR argdefs RPAR COLON type LCPAR stmts RCPAR SEMI
   15 stmt: ID . exp SEMI
   16     | ID . ASSIGN exp SEMI
   23 ids: ID .
   24    | ID . COMMA ids

    ID         fazer shift, e ir para o estado 37
    INTLIT     fazer shift, e ir para o estado 38
    FLOATLIT   fazer shift, e ir para o estado 39
    STRINGLIT  fazer shift, e ir para o estado 40
    BOOLLIT    fazer shift, e ir para o estado 41
    ASSIGN     fazer shift, e ir para o estado 81
    COMMA      fazer shift, e ir para o estado 7
    LPAR       fazer shift, e ir para o estado 82

    $default  reduzir usando a regra 23 (ids)

    exp  ir para o estado 83


Estado60

   20 stmt: RETURN . exp SEMI

    ID         fazer shift, e ir para o estado 37
    INTLIT     fazer shift, e ir para o estado 38
    FLOATLIT   fazer shift, e ir para o estado 39
    STRINGLIT  fazer shift, e ir para o estado 40
    BOOLLIT    fazer shift, e ir para o estado 41
    LPAR       fazer shift, e ir para o estado 42

    exp  ir para o estado 84


Estado61

   19 stmt: WHILE . exp DO LCPAR stmts RCPAR SEMI

    ID         fazer shift, e ir para o estado 37
    INTLIT     fazer shift, e ir para o estado 38
    FLOATLIT   fazer shift, e ir para o estado 39
    STRINGLIT  fazer shift, e ir para o estado 40
    BOOLLIT    fazer shift, e ir para o estado 41
    LPAR       fazer shift, e ir para o estado 42

    exp  ir para o estado 85


Estado62

   17 stmt: IF . exp THEN LCPAR stmts RCPAR SEMI
   18     | IF . exp THEN LCPAR stmts RCPAR ELSE LCPAR stmts RCPAR SEMI

    ID         fazer shift, e ir para o estado 37
    INTLIT     fazer shift, e ir para o estado 38
    FLOATLIT   fazer shift, e ir para o estado 39
    STRINGLIT  fazer shift, e ir para o estado 40
    BOOLLIT    fazer shift, e ir para o estado 41
    LPAR       fazer shift, e ir para o estado 42

    exp  ir para o estado 86


Estado63

   21 stmt: PRINT . exp SEMI

    ID         fazer shift, e ir para o estado 37
    INTLIT     fazer shift, e ir para o estado 38
    FLOATLIT   fazer shift, e ir para o estado 39
    STRINGLIT  fazer shift, e ir para o estado 40
    BOOLLIT    fazer shift, e ir para o estado 41
    LPAR       fazer shift, e ir para o estado 42

    exp  ir para o estado 87


Estado64

   22 stmt: INPUT . exp SEMI

    ID         fazer shift, e ir para o estado 37
    INTLIT     fazer shift, e ir para o estado 38
    FLOATLIT   fazer shift, e ir para o estado 39
    STRINGLIT  fazer shift, e ir para o estado 40
    BOOLLIT    fazer shift, e ir para o estado 41
    LPAR       fazer shift, e ir para o estado 42

    exp  ir para o estado 88


Estado65

   14 stmt: decl .

    $default  reduzir usando a regra 14 (stmt)


Estado66

    6 decl: ID LPAR RPAR COLON type LCPAR stmts . RCPAR SEMI

    RCPAR  fazer shift, e ir para o estado 89


Estado67

   12 stmts: stmt .
   13      | stmt . stmts

    ID      fazer shift, e ir para o estado 59
    DEFINE  fazer shift, e ir para o estado 2
    RETURN  fazer shift, e ir para o estado 60
    WHILE   fazer shift, e ir para o estado 61
    IF      fazer shift, e ir para o estado 62
    PRINT   fazer shift, e ir para o estado 63
    INPUT   fazer shift, e ir para o estado 64

    $default  reduzir usando a regra 12 (stmts)

    decl   ir para o estado 65
    stmts  ir para o estado 90
    stmt   ir para o estado 67
    ids    ir para o estado 6


Estado68

    7 decl: ID LPAR argdefs RPAR COLON type LCPAR . stmts RCPAR SEMI

    ID      fazer shift, e ir para o estado 59
    DEFINE  fazer shift, e ir para o estado 2
    RETURN  fazer shift, e ir para o estado 60
    WHILE   fazer shift, e ir para o estado 61
    IF      fazer shift, e ir para o estado 62
    PRINT   fazer shift, e ir para o estado 63
    INPUT   fazer shift, e ir para o estado 64

    decl   ir para o estado 65
    stmts  ir para o estado 91
    stmt   ir para o estado 67
    ids    ir para o estado 6


Estado69

   35 exp: exp . ADD exp
   36    | exp . SUB exp
   37    | exp . MUL exp
   38    | exp . DIV exp
   39    | exp . EQ_OP exp
   40    | exp . LT_OP exp
   41    | exp . GT_OP exp
   42    | exp . LET_OP exp
   43    | exp . GET_OP exp
   44    | exp . NE_OP exp
   46    | ID LPAR exp . RPAR

    EQ_OP   fazer shift, e ir para o estado 49
    NE_OP   fazer shift, e ir para o estado 50
    GET_OP  fazer shift, e ir para o estado 51
    LET_OP  fazer shift, e ir para o estado 52
    GT_OP   fazer shift, e ir para o estado 53
    LT_OP   fazer shift, e ir para o estado 54
    SUB     fazer shift, e ir para o estado 55
    ADD     fazer shift, e ir para o estado 56
    MUL     fazer shift, e ir para o estado 57
    DIV     fazer shift, e ir para o estado 58
    RPAR    fazer shift, e ir para o estado 92


Estado70

   45 exp: LPAR exp RPAR .

    $default  reduzir usando a regra 45 (exp)


Estado71

   35 exp: exp . ADD exp
   36    | exp . SUB exp
   37    | exp . MUL exp
   38    | exp . DIV exp
   39    | exp . EQ_OP exp
   39    | exp EQ_OP exp .
   40    | exp . LT_OP exp
   41    | exp . GT_OP exp
   42    | exp . LET_OP exp
   43    | exp . GET_OP exp
   44    | exp . NE_OP exp

    SUB  fazer shift, e ir para o estado 55
    ADD  fazer shift, e ir para o estado 56
    MUL  fazer shift, e ir para o estado 57
    DIV  fazer shift, e ir para o estado 58

    EQ_OP   erro (não-associativo)
    NE_OP   erro (não-associativo)
    GET_OP  erro (não-associativo)
    LET_OP  erro (não-associativo)
    GT_OP   erro (não-associativo)
    LT_OP   erro (não-associativo)

    $default  reduzir usando a regra 39 (exp)


Estado72

   35 exp: exp . ADD exp
   36    | exp . SUB exp
   37    | exp . MUL exp
   38    | exp . DIV exp
   39    | exp . EQ_OP exp
   40    | exp . LT_OP exp
   41    | exp . GT_OP exp
   42    | exp . LET_OP exp
   43    | exp . GET_OP exp
   44    | exp . NE_OP exp
   44    | exp NE_OP exp .

    SUB  fazer shift, e ir para o estado 55
    ADD  fazer shift, e ir para o estado 56
    MUL  fazer shift, e ir para o estado 57
    DIV  fazer shift, e ir para o estado 58

    EQ_OP   erro (não-associativo)
    NE_OP   erro (não-associativo)
    GET_OP  erro (não-associativo)
    LET_OP  erro (não-associativo)
    GT_OP   erro (não-associativo)
    LT_OP   erro (não-associativo)

    $default  reduzir usando a regra 44 (exp)


Estado73

   35 exp: exp . ADD exp
   36    | exp . SUB exp
   37    | exp . MUL exp
   38    | exp . DIV exp
   39    | exp . EQ_OP exp
   40    | exp . LT_OP exp
   41    | exp . GT_OP exp
   42    | exp . LET_OP exp
   43    | exp . GET_OP exp
   43    | exp GET_OP exp .
   44    | exp . NE_OP exp

    SUB  fazer shift, e ir para o estado 55
    ADD  fazer shift, e ir para o estado 56
    MUL  fazer shift, e ir para o estado 57
    DIV  fazer shift, e ir para o estado 58

    EQ_OP   erro (não-associativo)
    NE_OP   erro (não-associativo)
    GET_OP  erro (não-associativo)
    LET_OP  erro (não-associativo)
    GT_OP   erro (não-associativo)
    LT_OP   erro (não-associativo)

    $default  reduzir usando a regra 43 (exp)


Estado74

   35 exp: exp . ADD exp
   36    | exp . SUB exp
   37    | exp . MUL exp
   38    | exp . DIV exp
   39    | exp . EQ_OP exp
   40    | exp . LT_OP exp
   41    | exp . GT_OP exp
   42    | exp . LET_OP exp
   42    | exp LET_OP exp .
   43    | exp . GET_OP exp
   44    | exp . NE_OP exp

    SUB  fazer shift, e ir para o estado 55
    ADD  fazer shift, e ir para o estado 56
    MUL  fazer shift, e ir para o estado 57
    DIV  fazer shift, e ir para o estado 58

    EQ_OP   erro (não-associativo)
    NE_OP   erro (não-associativo)
    GET_OP  erro (não-associativo)
    LET_OP  erro (não-associativo)
    GT_OP   erro (não-associativo)
    LT_OP   erro (não-associativo)

    $default  reduzir usando a regra 42 (exp)


Estado75

   35 exp: exp . ADD exp
   36    | exp . SUB exp
   37    | exp . MUL exp
   38    | exp . DIV exp
   39    | exp . EQ_OP exp
   40    | exp . LT_OP exp
   41    | exp . GT_OP exp
   41    | exp GT_OP exp .
   42    | exp . LET_OP exp
   43    | exp . GET_OP exp
   44    | exp . NE_OP exp

    SUB  fazer shift, e ir para o estado 55
    ADD  fazer shift, e ir para o estado 56
    MUL  fazer shift, e ir para o estado 57
    DIV  fazer shift, e ir para o estado 58

    EQ_OP   erro (não-associativo)
    NE_OP   erro (não-associativo)
    GET_OP  erro (não-associativo)
    LET_OP  erro (não-associativo)
    GT_OP   erro (não-associativo)
    LT_OP   erro (não-associativo)

    $default  reduzir usando a regra 41 (exp)


Estado76

   35 exp: exp . ADD exp
   36    | exp . SUB exp
   37    | exp . MUL exp
   38    | exp . DIV exp
   39    | exp . EQ_OP exp
   40    | exp . LT_OP exp
   40    | exp LT_OP exp .
   41    | exp . GT_OP exp
   42    | exp . LET_OP exp
   43    | exp . GET_OP exp
   44    | exp . NE_OP exp

    SUB  fazer shift, e ir para o estado 55
    ADD  fazer shift, e ir para o estado 56
    MUL  fazer shift, e ir para o estado 57
    DIV  fazer shift, e ir para o estado 58

    EQ_OP   erro (não-associativo)
    NE_OP   erro (não-associativo)
    GET_OP  erro (não-associativo)
    LET_OP  erro (não-associativo)
    GT_OP   erro (não-associativo)
    LT_OP   erro (não-associativo)

    $default  reduzir usando a regra 40 (exp)


Estado77

   35 exp: exp . ADD exp
   36    | exp . SUB exp
   36    | exp SUB exp .
   37    | exp . MUL exp
   38    | exp . DIV exp
   39    | exp . EQ_OP exp
   40    | exp . LT_OP exp
   41    | exp . GT_OP exp
   42    | exp . LET_OP exp
   43    | exp . GET_OP exp
   44    | exp . NE_OP exp

    MUL  fazer shift, e ir para o estado 57
    DIV  fazer shift, e ir para o estado 58

    $default  reduzir usando a regra 36 (exp)


Estado78

   35 exp: exp . ADD exp
   35    | exp ADD exp .
   36    | exp . SUB exp
   37    | exp . MUL exp
   38    | exp . DIV exp
   39    | exp . EQ_OP exp
   40    | exp . LT_OP exp
   41    | exp . GT_OP exp
   42    | exp . LET_OP exp
   43    | exp . GET_OP exp
   44    | exp . NE_OP exp

    MUL  fazer shift, e ir para o estado 57
    DIV  fazer shift, e ir para o estado 58

    $default  reduzir usando a regra 35 (exp)


Estado79

   35 exp: exp . ADD exp
   36    | exp . SUB exp
   37    | exp . MUL exp
   37    | exp MUL exp .
   38    | exp . DIV exp
   39    | exp . EQ_OP exp
   40    | exp . LT_OP exp
   41    | exp . GT_OP exp
   42    | exp . LET_OP exp
   43    | exp . GET_OP exp
   44    | exp . NE_OP exp

    $default  reduzir usando a regra 37 (exp)


Estado80

   35 exp: exp . ADD exp
   36    | exp . SUB exp
   37    | exp . MUL exp
   38    | exp . DIV exp
   38    | exp DIV exp .
   39    | exp . EQ_OP exp
   40    | exp . LT_OP exp
   41    | exp . GT_OP exp
   42    | exp . LET_OP exp
   43    | exp . GET_OP exp
   44    | exp . NE_OP exp

    $default  reduzir usando a regra 38 (exp)


Estado81

   16 stmt: ID ASSIGN . exp SEMI

    ID         fazer shift, e ir para o estado 37
    INTLIT     fazer shift, e ir para o estado 38
    FLOATLIT   fazer shift, e ir para o estado 39
    STRINGLIT  fazer shift, e ir para o estado 40
    BOOLLIT    fazer shift, e ir para o estado 41
    LPAR       fazer shift, e ir para o estado 42

    exp  ir para o estado 93


Estado82

    6 decl: ID LPAR . RPAR COLON type LCPAR stmts RCPAR SEMI
    7     | ID LPAR . argdefs RPAR COLON type LCPAR stmts RCPAR SEMI
   45 exp: LPAR . exp RPAR

    ID         fazer shift, e ir para o estado 94
    INTLIT     fazer shift, e ir para o estado 38
    FLOATLIT   fazer shift, e ir para o estado 39
    STRINGLIT  fazer shift, e ir para o estado 40
    BOOLLIT    fazer shift, e ir para o estado 41
    LPAR       fazer shift, e ir para o estado 42
    RPAR       fazer shift, e ir para o estado 16

    argdefs  ir para o estado 17
    argdef   ir para o estado 18
    exp      ir para o estado 47


Estado83

   15 stmt: ID exp . SEMI
   35 exp: exp . ADD exp
   36    | exp . SUB exp
   37    | exp . MUL exp
   38    | exp . DIV exp
   39    | exp . EQ_OP exp
   40    | exp . LT_OP exp
   41    | exp . GT_OP exp
   42    | exp . LET_OP exp
   43    | exp . GET_OP exp
   44    | exp . NE_OP exp

    SEMI    fazer shift, e ir para o estado 95
    EQ_OP   fazer shift, e ir para o estado 49
    NE_OP   fazer shift, e ir para o estado 50
    GET_OP  fazer shift, e ir para o estado 51
    LET_OP  fazer shift, e ir para o estado 52
    GT_OP   fazer shift, e ir para o estado 53
    LT_OP   fazer shift, e ir para o estado 54
    SUB     fazer shift, e ir para o estado 55
    ADD     fazer shift, e ir para o estado 56
    MUL     fazer shift, e ir para o estado 57
    DIV     fazer shift, e ir para o estado 58


Estado84

   20 stmt: RETURN exp . SEMI
   35 exp: exp . ADD exp
   36    | exp . SUB exp
   37    | exp . MUL exp
   38    | exp . DIV exp
   39    | exp . EQ_OP exp
   40    | exp . LT_OP exp
   41    | exp . GT_OP exp
   42    | exp . LET_OP exp
   43    | exp . GET_OP exp
   44    | exp . NE_OP exp

    SEMI    fazer shift, e ir para o estado 96
    EQ_OP   fazer shift, e ir para o estado 49
    NE_OP   fazer shift, e ir para o estado 50
    GET_OP  fazer shift, e ir para o estado 51
    LET_OP  fazer shift, e ir para o estado 52
    GT_OP   fazer shift, e ir para o estado 53
    LT_OP   fazer shift, e ir para o estado 54
    SUB     fazer shift, e ir para o estado 55
    ADD     fazer shift, e ir para o estado 56
    MUL     fazer shift, e ir para o estado 57
    DIV     fazer shift, e ir para o estado 58


Estado85

   19 stmt: WHILE exp . DO LCPAR stmts RCPAR SEMI
   35 exp: exp . ADD exp
   36    | exp . SUB exp
   37    | exp . MUL exp
   38    | exp . DIV exp
   39    | exp . EQ_OP exp
   40    | exp . LT_OP exp
   41    | exp . GT_OP exp
   42    | exp . LET_OP exp
   43    | exp . GET_OP exp
   44    | exp . NE_OP exp

    DO      fazer shift, e ir para o estado 97
    EQ_OP   fazer shift, e ir para o estado 49
    NE_OP   fazer shift, e ir para o estado 50
    GET_OP  fazer shift, e ir para o estado 51
    LET_OP  fazer shift, e ir para o estado 52
    GT_OP   fazer shift, e ir para o estado 53
    LT_OP   fazer shift, e ir para o estado 54
    SUB     fazer shift, e ir para o estado 55
    ADD     fazer shift, e ir para o estado 56
    MUL     fazer shift, e ir para o estado 57
    DIV     fazer shift, e ir para o estado 58


Estado86

   17 stmt: IF exp . THEN LCPAR stmts RCPAR SEMI
   18     | IF exp . THEN LCPAR stmts RCPAR ELSE LCPAR stmts RCPAR SEMI
   35 exp: exp . ADD exp
   36    | exp . SUB exp
   37    | exp . MUL exp
   38    | exp . DIV exp
   39    | exp . EQ_OP exp
   40    | exp . LT_OP exp
   41    | exp . GT_OP exp
   42    | exp . LET_OP exp
   43    | exp . GET_OP exp
   44    | exp . NE_OP exp

    THEN    fazer shift, e ir para o estado 98
    EQ_OP   fazer shift, e ir para o estado 49
    NE_OP   fazer shift, e ir para o estado 50
    GET_OP  fazer shift, e ir para o estado 51
    LET_OP  fazer shift, e ir para o estado 52
    GT_OP   fazer shift, e ir para o estado 53
    LT_OP   fazer shift, e ir para o estado 54
    SUB     fazer shift, e ir para o estado 55
    ADD     fazer shift, e ir para o estado 56
    MUL     fazer shift, e ir para o estado 57
    DIV     fazer shift, e ir para o estado 58


Estado87

   21 stmt: PRINT exp . SEMI
   35 exp: exp . ADD exp
   36    | exp . SUB exp
   37    | exp . MUL exp
   38    | exp . DIV exp
   39    | exp . EQ_OP exp
   40    | exp . LT_OP exp
   41    | exp . GT_OP exp
   42    | exp . LET_OP exp
   43    | exp . GET_OP exp
   44    | exp . NE_OP exp

    SEMI    fazer shift, e ir para o estado 99
    EQ_OP   fazer shift, e ir para o estado 49
    NE_OP   fazer shift, e ir para o estado 50
    GET_OP  fazer shift, e ir para o estado 51
    LET_OP  fazer shift, e ir para o estado 52
    GT_OP   fazer shift, e ir para o estado 53
    LT_OP   fazer shift, e ir para o estado 54
    SUB     fazer shift, e ir para o estado 55
    ADD     fazer shift, e ir para o estado 56
    MUL     fazer shift, e ir para o estado 57
    DIV     fazer shift, e ir para o estado 58


Estado88

   22 stmt: INPUT exp . SEMI
   35 exp: exp . ADD exp
   36    | exp . SUB exp
   37    | exp . MUL exp
   38    | exp . DIV exp
   39    | exp . EQ_OP exp
   40    | exp . LT_OP exp
   41    | exp . GT_OP exp
   42    | exp . LET_OP exp
   43    | exp . GET_OP exp
   44    | exp . NE_OP exp

    SEMI    fazer shift, e ir para o estado 100
    EQ_OP   fazer shift, e ir para o estado 49
    NE_OP   fazer shift, e ir para o estado 50
    GET_OP  fazer shift, e ir para o estado 51
    LET_OP  fazer shift, e ir para o estado 52
    GT_OP   fazer shift, e ir para o estado 53
    LT_OP   fazer shift, e ir para o estado 54
    SUB     fazer shift, e ir para o estado 55
    ADD     fazer shift, e ir para o estado 56
    MUL     fazer shift, e ir para o estado 57
    DIV     fazer shift, e ir para o estado 58


Estado89

    6 decl: ID LPAR RPAR COLON type LCPAR stmts RCPAR . SEMI

    SEMI  fazer shift, e ir para o estado 101


Estado90

   13 stmts: stmt stmts .

    $default  reduzir usando a regra 13 (stmts)


Estado91

    7 decl: ID LPAR argdefs RPAR COLON type LCPAR stmts . RCPAR SEMI

    RCPAR  fazer shift, e ir para o estado 102


Estado92

   46 exp: ID LPAR exp RPAR .

    $default  reduzir usando a regra 46 (exp)


Estado93

   16 stmt: ID ASSIGN exp . SEMI
   35 exp: exp . ADD exp
   36    | exp . SUB exp
   37    | exp . MUL exp
   38    | exp . DIV exp
   39    | exp . EQ_OP exp
   40    | exp . LT_OP exp
   41    | exp . GT_OP exp
   42    | exp . LET_OP exp
   43    | exp . GET_OP exp
   44    | exp . NE_OP exp

    SEMI    fazer shift, e ir para o estado 103
    EQ_OP   fazer shift, e ir para o estado 49
    NE_OP   fazer shift, e ir para o estado 50
    GET_OP  fazer shift, e ir para o estado 51
    LET_OP  fazer shift, e ir para o estado 52
    GT_OP   fazer shift, e ir para o estado 53
    LT_OP   fazer shift, e ir para o estado 54
    SUB     fazer shift, e ir para o estado 55
    ADD     fazer shift, e ir para o estado 56
    MUL     fazer shift, e ir para o estado 57
    DIV     fazer shift, e ir para o estado 58


Estado94

   11 argdef: ID . COLON type
   34 exp: ID .
   46    | ID . LPAR exp RPAR

    COLON  fazer shift, e ir para o estado 26
    LPAR   fazer shift, e ir para o estado 46

    $default  reduzir usando a regra 34 (exp)


Estado95

   15 stmt: ID exp SEMI .

    $default  reduzir usando a regra 15 (stmt)


Estado96

   20 stmt: RETURN exp SEMI .

    $default  reduzir usando a regra 20 (stmt)


Estado97

   19 stmt: WHILE exp DO . LCPAR stmts RCPAR SEMI

    LCPAR  fazer shift, e ir para o estado 104


Estado98

   17 stmt: IF exp THEN . LCPAR stmts RCPAR SEMI
   18     | IF exp THEN . LCPAR stmts RCPAR ELSE LCPAR stmts RCPAR SEMI

    LCPAR  fazer shift, e ir para o estado 105


Estado99

   21 stmt: PRINT exp SEMI .

    $default  reduzir usando a regra 21 (stmt)


Estado100

   22 stmt: INPUT exp SEMI .

    $default  reduzir usando a regra 22 (stmt)


Estado101

    6 decl: ID LPAR RPAR COLON type LCPAR stmts RCPAR SEMI .

    $default  reduzir usando a regra 6 (decl)


Estado102

    7 decl: ID LPAR argdefs RPAR COLON type LCPAR stmts RCPAR . SEMI

    SEMI  fazer shift, e ir para o estado 106


Estado103

   16 stmt: ID ASSIGN exp SEMI .

    $default  reduzir usando a regra 16 (stmt)


Estado104

   19 stmt: WHILE exp DO LCPAR . stmts RCPAR SEMI

    ID      fazer shift, e ir para o estado 59
    DEFINE  fazer shift, e ir para o estado 2
    RETURN  fazer shift, e ir para o estado 60
    WHILE   fazer shift, e ir para o estado 61
    IF      fazer shift, e ir para o estado 62
    PRINT   fazer shift, e ir para o estado 63
    INPUT   fazer shift, e ir para o estado 64

    decl   ir para o estado 65
    stmts  ir para o estado 107
    stmt   ir para o estado 67
    ids    ir para o estado 6


Estado105

   17 stmt: IF exp THEN LCPAR . stmts RCPAR SEMI
   18     | IF exp THEN LCPAR . stmts RCPAR ELSE LCPAR stmts RCPAR SEMI

    ID      fazer shift, e ir para o estado 59
    DEFINE  fazer shift, e ir para o estado 2
    RETURN  fazer shift, e ir para o estado 60
    WHILE   fazer shift, e ir para o estado 61
    IF      fazer shift, e ir para o estado 62
    PRINT   fazer shift, e ir para o estado 63
    INPUT   fazer shift, e ir para o estado 64

    decl   ir para o estado 65
    stmts  ir para o estado 108
    stmt   ir para o estado 67
    ids    ir para o estado 6


Estado106

    7 decl: ID LPAR argdefs RPAR COLON type LCPAR stmts RCPAR SEMI .

    $default  reduzir usando a regra 7 (decl)


Estado107

   19 stmt: WHILE exp DO LCPAR stmts . RCPAR SEMI

    RCPAR  fazer shift, e ir para o estado 109


Estado108

   17 stmt: IF exp THEN LCPAR stmts . RCPAR SEMI
   18     | IF exp THEN LCPAR stmts . RCPAR ELSE LCPAR stmts RCPAR SEMI

    RCPAR  fazer shift, e ir para o estado 110


Estado109

   19 stmt: WHILE exp DO LCPAR stmts RCPAR . SEMI

    SEMI  fazer shift, e ir para o estado 111


Estado110

   17 stmt: IF exp THEN LCPAR stmts RCPAR . SEMI
   18     | IF exp THEN LCPAR stmts RCPAR . ELSE LCPAR stmts RCPAR SEMI

    ELSE  fazer shift, e ir para o estado 112
    SEMI  fazer shift, e ir para o estado 113


Estado111

   19 stmt: WHILE exp DO LCPAR stmts RCPAR SEMI .

    $default  reduzir usando a regra 19 (stmt)


Estado112

   18 stmt: IF exp THEN LCPAR stmts RCPAR ELSE . LCPAR stmts RCPAR SEMI

    LCPAR  fazer shift, e ir para o estado 114


Estado113

   17 stmt: IF exp THEN LCPAR stmts RCPAR SEMI .

    $default  reduzir usando a regra 17 (stmt)


Estado114

   18 stmt: IF exp THEN LCPAR stmts RCPAR ELSE LCPAR . stmts RCPAR SEMI

    ID      fazer shift, e ir para o estado 59
    DEFINE  fazer shift, e ir para o estado 2
    RETURN  fazer shift, e ir para o estado 60
    WHILE   fazer shift, e ir para o estado 61
    IF      fazer shift, e ir para o estado 62
    PRINT   fazer shift, e ir para o estado 63
    INPUT   fazer shift, e ir para o estado 64

    decl   ir para o estado 65
    stmts  ir para o estado 115
    stmt   ir para o estado 67
    ids    ir para o estado 6


Estado115

   18 stmt: IF exp THEN LCPAR stmts RCPAR ELSE LCPAR stmts . RCPAR SEMI

    RCPAR  fazer shift, e ir para o estado 116


Estado116

   18 stmt: IF exp THEN LCPAR stmts RCPAR ELSE LCPAR stmts RCPAR . SEMI

    SEMI  fazer shift, e ir para o estado 117


Estado117

   18 stmt: IF exp THEN LCPAR stmts RCPAR ELSE LCPAR stmts RCPAR SEMI .

    $default  reduzir usando a regra 18 (stmt)
