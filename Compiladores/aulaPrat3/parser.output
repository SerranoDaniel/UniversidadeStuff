Terminals unused in grammar

   STRUCT
   BREAK
   NEXT
   INV_COMMA
   OR
   AND
   NOT
   MOD
   POW
   LRPAR
   RRPAR


Grammar

    0 $accept: program $end

    1 program: decls

    2 decls: decl
    3      | decl decls

    4 decl: ids COLON type SEMI
    5     | ids COLON type ASSIGN exp SEMI
    6     | ID LPAR RPAR COLON type LCPAR stmts RCPAR SEMI
    7     | ID LPAR argdefs RPAR COLON type LCPAR stmts RCPAR SEMI
    8     | DEFINE ID type SEMI

    9 argdefs: argdef
   10        | argdef COMMA argdefs

   11 argdef: ID COLON type

   12 stmts: stmt
   13      | stmt stmts

   14 stmt: decl
   15     | ID exp SEMI
   16     | ID ASSIGN exp SEMI
   17     | IF exp THEN LCPAR stmts RCPAR SEMI
   18     | IF exp THEN LCPAR stmts RCPAR ELSE LCPAR stmts RCPAR SEMI
   19     | WHILE exp DO LCPAR stmts RCPAR SEMI
   20     | RETURN exp SEMI
   21     | PRINT exp SEMI
   22     | INPUT exp SEMI

   23 ids: ID
   24    | ID COMMA ids

   25 type: T_INT
   26     | T_FLOAT
   27     | T_STRING
   28     | T_BOOL
   29     | VOID

   30 exp: INTLIT
   31    | STRINGLIT
   32    | FLOATLIT
   33    | BOOLLIT
   34    | ID
   35    | exp ADD exp
   36    | exp SUB exp
   37    | exp MUL exp
   38    | exp DIV exp
   39    | exp EQ_OP exp
   40    | exp LT_OP exp
   41    | exp GT_OP exp
   42    | exp LET_OP exp
   43    | exp GET_OP exp
   44    | exp NE_OP exp
   45    | LPAR exp RPAR
   46    | ID LPAR exp RPAR


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 6 7 8 11 15 16 23 24 34 46
INTLIT (259) 30
FLOATLIT (260) 32
STRINGLIT (261) 31
BOOLLIT (262) 33
T_INT (263) 25
T_FLOAT (264) 26
T_STRING (265) 27
T_BOOL (266) 28
VOID (267) 29
DEFINE (268) 8
RETURN (269) 20
STRUCT (270)
WHILE (271) 19
IF (272) 17 18
THEN (273) 17 18
DO (274) 19
PRINT (275) 21
INPUT (276) 22
ELSE (277) 18
BREAK (278)
NEXT (279)
COLON (280) 4 5 6 7 11
ASSIGN (281) 5 16
COMMA (282) 10 24
SEMI (283) 4 5 6 7 8 15 16 17 18 19 20 21 22
INV_COMMA (284)
OR (285)
AND (286)
NOT (287)
MOD (288)
EQ_OP (289) 39
NE_OP (290) 44
GET_OP (291) 43
LET_OP (292) 42
GT_OP (293) 41
LT_OP (294) 40
SUB (295) 36
ADD (296) 35
MUL (297) 37
DIV (298) 38
POW (299)
LCPAR (300) 6 7 17 18 19
RCPAR (301) 6 7 17 18 19
LRPAR (302)
RRPAR (303)
LPAR (304) 6 7 45 46
RPAR (305) 6 7 45 46


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
program (52)
    on left: 1, on right: 0
decls (53)
    on left: 2 3, on right: 1 3
decl (54)
    on left: 4 5 6 7 8, on right: 2 3 14
argdefs (55)
    on left: 9 10, on right: 7 10
argdef (56)
    on left: 11, on right: 9 10
stmts (57)
    on left: 12 13, on right: 6 7 13 17 18 19
stmt (58)
    on left: 14 15 16 17 18 19 20 21 22, on right: 12 13
ids (59)
    on left: 23 24, on right: 4 5 24
type (60)
    on left: 25 26 27 28 29, on right: 4 5 6 7 8 11
exp (61)
    on left: 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46, on right:
    5 15 16 17 18 19 20 21 22 35 36 37 38 39 40 41 42 43 44 45 46


State 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    DEFINE  shift, and go to state 2

    program  go to state 3
    decls    go to state 4
    decl     go to state 5
    ids      go to state 6


State 1

    6 decl: ID . LPAR RPAR COLON type LCPAR stmts RCPAR SEMI
    7     | ID . LPAR argdefs RPAR COLON type LCPAR stmts RCPAR SEMI
   23 ids: ID .
   24    | ID . COMMA ids

    COMMA  shift, and go to state 7
    LPAR   shift, and go to state 8

    $default  reduce using rule 23 (ids)


State 2

    8 decl: DEFINE . ID type SEMI

    ID  shift, and go to state 9


State 3

    0 $accept: program . $end

    $end  shift, and go to state 10


State 4

    1 program: decls .

    $default  reduce using rule 1 (program)


State 5

    2 decls: decl .
    3      | decl . decls

    ID      shift, and go to state 1
    DEFINE  shift, and go to state 2

    $default  reduce using rule 2 (decls)

    decls  go to state 11
    decl   go to state 5
    ids    go to state 6


State 6

    4 decl: ids . COLON type SEMI
    5     | ids . COLON type ASSIGN exp SEMI

    COLON  shift, and go to state 12


State 7

   24 ids: ID COMMA . ids

    ID  shift, and go to state 13

    ids  go to state 14


State 8

    6 decl: ID LPAR . RPAR COLON type LCPAR stmts RCPAR SEMI
    7     | ID LPAR . argdefs RPAR COLON type LCPAR stmts RCPAR SEMI

    ID    shift, and go to state 15
    RPAR  shift, and go to state 16

    argdefs  go to state 17
    argdef   go to state 18


State 9

    8 decl: DEFINE ID . type SEMI

    T_INT     shift, and go to state 19
    T_FLOAT   shift, and go to state 20
    T_STRING  shift, and go to state 21
    T_BOOL    shift, and go to state 22
    VOID      shift, and go to state 23

    type  go to state 24


State 10

    0 $accept: program $end .

    $default  accept


State 11

    3 decls: decl decls .

    $default  reduce using rule 3 (decls)


State 12

    4 decl: ids COLON . type SEMI
    5     | ids COLON . type ASSIGN exp SEMI

    T_INT     shift, and go to state 19
    T_FLOAT   shift, and go to state 20
    T_STRING  shift, and go to state 21
    T_BOOL    shift, and go to state 22
    VOID      shift, and go to state 23

    type  go to state 25


State 13

   23 ids: ID .
   24    | ID . COMMA ids

    COMMA  shift, and go to state 7

    $default  reduce using rule 23 (ids)


State 14

   24 ids: ID COMMA ids .

    $default  reduce using rule 24 (ids)


State 15

   11 argdef: ID . COLON type

    COLON  shift, and go to state 26


State 16

    6 decl: ID LPAR RPAR . COLON type LCPAR stmts RCPAR SEMI

    COLON  shift, and go to state 27


State 17

    7 decl: ID LPAR argdefs . RPAR COLON type LCPAR stmts RCPAR SEMI

    RPAR  shift, and go to state 28


State 18

    9 argdefs: argdef .
   10        | argdef . COMMA argdefs

    COMMA  shift, and go to state 29

    $default  reduce using rule 9 (argdefs)


State 19

   25 type: T_INT .

    $default  reduce using rule 25 (type)


State 20

   26 type: T_FLOAT .

    $default  reduce using rule 26 (type)


State 21

   27 type: T_STRING .

    $default  reduce using rule 27 (type)


State 22

   28 type: T_BOOL .

    $default  reduce using rule 28 (type)


State 23

   29 type: VOID .

    $default  reduce using rule 29 (type)


State 24

    8 decl: DEFINE ID type . SEMI

    SEMI  shift, and go to state 30


State 25

    4 decl: ids COLON type . SEMI
    5     | ids COLON type . ASSIGN exp SEMI

    ASSIGN  shift, and go to state 31
    SEMI    shift, and go to state 32


State 26

   11 argdef: ID COLON . type

    T_INT     shift, and go to state 19
    T_FLOAT   shift, and go to state 20
    T_STRING  shift, and go to state 21
    T_BOOL    shift, and go to state 22
    VOID      shift, and go to state 23

    type  go to state 33


State 27

    6 decl: ID LPAR RPAR COLON . type LCPAR stmts RCPAR SEMI

    T_INT     shift, and go to state 19
    T_FLOAT   shift, and go to state 20
    T_STRING  shift, and go to state 21
    T_BOOL    shift, and go to state 22
    VOID      shift, and go to state 23

    type  go to state 34


State 28

    7 decl: ID LPAR argdefs RPAR . COLON type LCPAR stmts RCPAR SEMI

    COLON  shift, and go to state 35


State 29

   10 argdefs: argdef COMMA . argdefs

    ID  shift, and go to state 15

    argdefs  go to state 36
    argdef   go to state 18


State 30

    8 decl: DEFINE ID type SEMI .

    $default  reduce using rule 8 (decl)


State 31

    5 decl: ids COLON type ASSIGN . exp SEMI

    ID         shift, and go to state 37
    INTLIT     shift, and go to state 38
    FLOATLIT   shift, and go to state 39
    STRINGLIT  shift, and go to state 40
    BOOLLIT    shift, and go to state 41
    LPAR       shift, and go to state 42

    exp  go to state 43


State 32

    4 decl: ids COLON type SEMI .

    $default  reduce using rule 4 (decl)


State 33

   11 argdef: ID COLON type .

    $default  reduce using rule 11 (argdef)


State 34

    6 decl: ID LPAR RPAR COLON type . LCPAR stmts RCPAR SEMI

    LCPAR  shift, and go to state 44


State 35

    7 decl: ID LPAR argdefs RPAR COLON . type LCPAR stmts RCPAR SEMI

    T_INT     shift, and go to state 19
    T_FLOAT   shift, and go to state 20
    T_STRING  shift, and go to state 21
    T_BOOL    shift, and go to state 22
    VOID      shift, and go to state 23

    type  go to state 45


State 36

   10 argdefs: argdef COMMA argdefs .

    $default  reduce using rule 10 (argdefs)


State 37

   34 exp: ID .
   46    | ID . LPAR exp RPAR

    LPAR  shift, and go to state 46

    $default  reduce using rule 34 (exp)


State 38

   30 exp: INTLIT .

    $default  reduce using rule 30 (exp)


State 39

   32 exp: FLOATLIT .

    $default  reduce using rule 32 (exp)


State 40

   31 exp: STRINGLIT .

    $default  reduce using rule 31 (exp)


State 41

   33 exp: BOOLLIT .

    $default  reduce using rule 33 (exp)


State 42

   45 exp: LPAR . exp RPAR

    ID         shift, and go to state 37
    INTLIT     shift, and go to state 38
    FLOATLIT   shift, and go to state 39
    STRINGLIT  shift, and go to state 40
    BOOLLIT    shift, and go to state 41
    LPAR       shift, and go to state 42

    exp  go to state 47


State 43

    5 decl: ids COLON type ASSIGN exp . SEMI
   35 exp: exp . ADD exp
   36    | exp . SUB exp
   37    | exp . MUL exp
   38    | exp . DIV exp
   39    | exp . EQ_OP exp
   40    | exp . LT_OP exp
   41    | exp . GT_OP exp
   42    | exp . LET_OP exp
   43    | exp . GET_OP exp
   44    | exp . NE_OP exp

    SEMI    shift, and go to state 48
    EQ_OP   shift, and go to state 49
    NE_OP   shift, and go to state 50
    GET_OP  shift, and go to state 51
    LET_OP  shift, and go to state 52
    GT_OP   shift, and go to state 53
    LT_OP   shift, and go to state 54
    SUB     shift, and go to state 55
    ADD     shift, and go to state 56
    MUL     shift, and go to state 57
    DIV     shift, and go to state 58


State 44

    6 decl: ID LPAR RPAR COLON type LCPAR . stmts RCPAR SEMI

    ID      shift, and go to state 59
    DEFINE  shift, and go to state 2
    RETURN  shift, and go to state 60
    WHILE   shift, and go to state 61
    IF      shift, and go to state 62
    PRINT   shift, and go to state 63
    INPUT   shift, and go to state 64

    decl   go to state 65
    stmts  go to state 66
    stmt   go to state 67
    ids    go to state 6


State 45

    7 decl: ID LPAR argdefs RPAR COLON type . LCPAR stmts RCPAR SEMI

    LCPAR  shift, and go to state 68


State 46

   46 exp: ID LPAR . exp RPAR

    ID         shift, and go to state 37
    INTLIT     shift, and go to state 38
    FLOATLIT   shift, and go to state 39
    STRINGLIT  shift, and go to state 40
    BOOLLIT    shift, and go to state 41
    LPAR       shift, and go to state 42

    exp  go to state 69


State 47

   35 exp: exp . ADD exp
   36    | exp . SUB exp
   37    | exp . MUL exp
   38    | exp . DIV exp
   39    | exp . EQ_OP exp
   40    | exp . LT_OP exp
   41    | exp . GT_OP exp
   42    | exp . LET_OP exp
   43    | exp . GET_OP exp
   44    | exp . NE_OP exp
   45    | LPAR exp . RPAR

    EQ_OP   shift, and go to state 49
    NE_OP   shift, and go to state 50
    GET_OP  shift, and go to state 51
    LET_OP  shift, and go to state 52
    GT_OP   shift, and go to state 53
    LT_OP   shift, and go to state 54
    SUB     shift, and go to state 55
    ADD     shift, and go to state 56
    MUL     shift, and go to state 57
    DIV     shift, and go to state 58
    RPAR    shift, and go to state 70


State 48

    5 decl: ids COLON type ASSIGN exp SEMI .

    $default  reduce using rule 5 (decl)


State 49

   39 exp: exp EQ_OP . exp

    ID         shift, and go to state 37
    INTLIT     shift, and go to state 38
    FLOATLIT   shift, and go to state 39
    STRINGLIT  shift, and go to state 40
    BOOLLIT    shift, and go to state 41
    LPAR       shift, and go to state 42

    exp  go to state 71


State 50

   44 exp: exp NE_OP . exp

    ID         shift, and go to state 37
    INTLIT     shift, and go to state 38
    FLOATLIT   shift, and go to state 39
    STRINGLIT  shift, and go to state 40
    BOOLLIT    shift, and go to state 41
    LPAR       shift, and go to state 42

    exp  go to state 72


State 51

   43 exp: exp GET_OP . exp

    ID         shift, and go to state 37
    INTLIT     shift, and go to state 38
    FLOATLIT   shift, and go to state 39
    STRINGLIT  shift, and go to state 40
    BOOLLIT    shift, and go to state 41
    LPAR       shift, and go to state 42

    exp  go to state 73


State 52

   42 exp: exp LET_OP . exp

    ID         shift, and go to state 37
    INTLIT     shift, and go to state 38
    FLOATLIT   shift, and go to state 39
    STRINGLIT  shift, and go to state 40
    BOOLLIT    shift, and go to state 41
    LPAR       shift, and go to state 42

    exp  go to state 74


State 53

   41 exp: exp GT_OP . exp

    ID         shift, and go to state 37
    INTLIT     shift, and go to state 38
    FLOATLIT   shift, and go to state 39
    STRINGLIT  shift, and go to state 40
    BOOLLIT    shift, and go to state 41
    LPAR       shift, and go to state 42

    exp  go to state 75


State 54

   40 exp: exp LT_OP . exp

    ID         shift, and go to state 37
    INTLIT     shift, and go to state 38
    FLOATLIT   shift, and go to state 39
    STRINGLIT  shift, and go to state 40
    BOOLLIT    shift, and go to state 41
    LPAR       shift, and go to state 42

    exp  go to state 76


State 55

   36 exp: exp SUB . exp

    ID         shift, and go to state 37
    INTLIT     shift, and go to state 38
    FLOATLIT   shift, and go to state 39
    STRINGLIT  shift, and go to state 40
    BOOLLIT    shift, and go to state 41
    LPAR       shift, and go to state 42

    exp  go to state 77


State 56

   35 exp: exp ADD . exp

    ID         shift, and go to state 37
    INTLIT     shift, and go to state 38
    FLOATLIT   shift, and go to state 39
    STRINGLIT  shift, and go to state 40
    BOOLLIT    shift, and go to state 41
    LPAR       shift, and go to state 42

    exp  go to state 78


State 57

   37 exp: exp MUL . exp

    ID         shift, and go to state 37
    INTLIT     shift, and go to state 38
    FLOATLIT   shift, and go to state 39
    STRINGLIT  shift, and go to state 40
    BOOLLIT    shift, and go to state 41
    LPAR       shift, and go to state 42

    exp  go to state 79


State 58

   38 exp: exp DIV . exp

    ID         shift, and go to state 37
    INTLIT     shift, and go to state 38
    FLOATLIT   shift, and go to state 39
    STRINGLIT  shift, and go to state 40
    BOOLLIT    shift, and go to state 41
    LPAR       shift, and go to state 42

    exp  go to state 80


State 59

    6 decl: ID . LPAR RPAR COLON type LCPAR stmts RCPAR SEMI
    7     | ID . LPAR argdefs RPAR COLON type LCPAR stmts RCPAR SEMI
   15 stmt: ID . exp SEMI
   16     | ID . ASSIGN exp SEMI
   23 ids: ID .
   24    | ID . COMMA ids

    ID         shift, and go to state 37
    INTLIT     shift, and go to state 38
    FLOATLIT   shift, and go to state 39
    STRINGLIT  shift, and go to state 40
    BOOLLIT    shift, and go to state 41
    ASSIGN     shift, and go to state 81
    COMMA      shift, and go to state 7
    LPAR       shift, and go to state 82

    $default  reduce using rule 23 (ids)

    exp  go to state 83


State 60

   20 stmt: RETURN . exp SEMI

    ID         shift, and go to state 37
    INTLIT     shift, and go to state 38
    FLOATLIT   shift, and go to state 39
    STRINGLIT  shift, and go to state 40
    BOOLLIT    shift, and go to state 41
    LPAR       shift, and go to state 42

    exp  go to state 84


State 61

   19 stmt: WHILE . exp DO LCPAR stmts RCPAR SEMI

    ID         shift, and go to state 37
    INTLIT     shift, and go to state 38
    FLOATLIT   shift, and go to state 39
    STRINGLIT  shift, and go to state 40
    BOOLLIT    shift, and go to state 41
    LPAR       shift, and go to state 42

    exp  go to state 85


State 62

   17 stmt: IF . exp THEN LCPAR stmts RCPAR SEMI
   18     | IF . exp THEN LCPAR stmts RCPAR ELSE LCPAR stmts RCPAR SEMI

    ID         shift, and go to state 37
    INTLIT     shift, and go to state 38
    FLOATLIT   shift, and go to state 39
    STRINGLIT  shift, and go to state 40
    BOOLLIT    shift, and go to state 41
    LPAR       shift, and go to state 42

    exp  go to state 86


State 63

   21 stmt: PRINT . exp SEMI

    ID         shift, and go to state 37
    INTLIT     shift, and go to state 38
    FLOATLIT   shift, and go to state 39
    STRINGLIT  shift, and go to state 40
    BOOLLIT    shift, and go to state 41
    LPAR       shift, and go to state 42

    exp  go to state 87


State 64

   22 stmt: INPUT . exp SEMI

    ID         shift, and go to state 37
    INTLIT     shift, and go to state 38
    FLOATLIT   shift, and go to state 39
    STRINGLIT  shift, and go to state 40
    BOOLLIT    shift, and go to state 41
    LPAR       shift, and go to state 42

    exp  go to state 88


State 65

   14 stmt: decl .

    $default  reduce using rule 14 (stmt)


State 66

    6 decl: ID LPAR RPAR COLON type LCPAR stmts . RCPAR SEMI

    RCPAR  shift, and go to state 89


State 67

   12 stmts: stmt .
   13      | stmt . stmts

    ID      shift, and go to state 59
    DEFINE  shift, and go to state 2
    RETURN  shift, and go to state 60
    WHILE   shift, and go to state 61
    IF      shift, and go to state 62
    PRINT   shift, and go to state 63
    INPUT   shift, and go to state 64

    $default  reduce using rule 12 (stmts)

    decl   go to state 65
    stmts  go to state 90
    stmt   go to state 67
    ids    go to state 6


State 68

    7 decl: ID LPAR argdefs RPAR COLON type LCPAR . stmts RCPAR SEMI

    ID      shift, and go to state 59
    DEFINE  shift, and go to state 2
    RETURN  shift, and go to state 60
    WHILE   shift, and go to state 61
    IF      shift, and go to state 62
    PRINT   shift, and go to state 63
    INPUT   shift, and go to state 64

    decl   go to state 65
    stmts  go to state 91
    stmt   go to state 67
    ids    go to state 6


State 69

   35 exp: exp . ADD exp
   36    | exp . SUB exp
   37    | exp . MUL exp
   38    | exp . DIV exp
   39    | exp . EQ_OP exp
   40    | exp . LT_OP exp
   41    | exp . GT_OP exp
   42    | exp . LET_OP exp
   43    | exp . GET_OP exp
   44    | exp . NE_OP exp
   46    | ID LPAR exp . RPAR

    EQ_OP   shift, and go to state 49
    NE_OP   shift, and go to state 50
    GET_OP  shift, and go to state 51
    LET_OP  shift, and go to state 52
    GT_OP   shift, and go to state 53
    LT_OP   shift, and go to state 54
    SUB     shift, and go to state 55
    ADD     shift, and go to state 56
    MUL     shift, and go to state 57
    DIV     shift, and go to state 58
    RPAR    shift, and go to state 92


State 70

   45 exp: LPAR exp RPAR .

    $default  reduce using rule 45 (exp)


State 71

   35 exp: exp . ADD exp
   36    | exp . SUB exp
   37    | exp . MUL exp
   38    | exp . DIV exp
   39    | exp . EQ_OP exp
   39    | exp EQ_OP exp .
   40    | exp . LT_OP exp
   41    | exp . GT_OP exp
   42    | exp . LET_OP exp
   43    | exp . GET_OP exp
   44    | exp . NE_OP exp

    SUB  shift, and go to state 55
    ADD  shift, and go to state 56
    MUL  shift, and go to state 57
    DIV  shift, and go to state 58

    EQ_OP   error (nonassociative)
    NE_OP   error (nonassociative)
    GET_OP  error (nonassociative)
    LET_OP  error (nonassociative)
    GT_OP   error (nonassociative)
    LT_OP   error (nonassociative)

    $default  reduce using rule 39 (exp)


State 72

   35 exp: exp . ADD exp
   36    | exp . SUB exp
   37    | exp . MUL exp
   38    | exp . DIV exp
   39    | exp . EQ_OP exp
   40    | exp . LT_OP exp
   41    | exp . GT_OP exp
   42    | exp . LET_OP exp
   43    | exp . GET_OP exp
   44    | exp . NE_OP exp
   44    | exp NE_OP exp .

    SUB  shift, and go to state 55
    ADD  shift, and go to state 56
    MUL  shift, and go to state 57
    DIV  shift, and go to state 58

    EQ_OP   error (nonassociative)
    NE_OP   error (nonassociative)
    GET_OP  error (nonassociative)
    LET_OP  error (nonassociative)
    GT_OP   error (nonassociative)
    LT_OP   error (nonassociative)

    $default  reduce using rule 44 (exp)


State 73

   35 exp: exp . ADD exp
   36    | exp . SUB exp
   37    | exp . MUL exp
   38    | exp . DIV exp
   39    | exp . EQ_OP exp
   40    | exp . LT_OP exp
   41    | exp . GT_OP exp
   42    | exp . LET_OP exp
   43    | exp . GET_OP exp
   43    | exp GET_OP exp .
   44    | exp . NE_OP exp

    SUB  shift, and go to state 55
    ADD  shift, and go to state 56
    MUL  shift, and go to state 57
    DIV  shift, and go to state 58

    EQ_OP   error (nonassociative)
    NE_OP   error (nonassociative)
    GET_OP  error (nonassociative)
    LET_OP  error (nonassociative)
    GT_OP   error (nonassociative)
    LT_OP   error (nonassociative)

    $default  reduce using rule 43 (exp)


State 74

   35 exp: exp . ADD exp
   36    | exp . SUB exp
   37    | exp . MUL exp
   38    | exp . DIV exp
   39    | exp . EQ_OP exp
   40    | exp . LT_OP exp
   41    | exp . GT_OP exp
   42    | exp . LET_OP exp
   42    | exp LET_OP exp .
   43    | exp . GET_OP exp
   44    | exp . NE_OP exp

    SUB  shift, and go to state 55
    ADD  shift, and go to state 56
    MUL  shift, and go to state 57
    DIV  shift, and go to state 58

    EQ_OP   error (nonassociative)
    NE_OP   error (nonassociative)
    GET_OP  error (nonassociative)
    LET_OP  error (nonassociative)
    GT_OP   error (nonassociative)
    LT_OP   error (nonassociative)

    $default  reduce using rule 42 (exp)


State 75

   35 exp: exp . ADD exp
   36    | exp . SUB exp
   37    | exp . MUL exp
   38    | exp . DIV exp
   39    | exp . EQ_OP exp
   40    | exp . LT_OP exp
   41    | exp . GT_OP exp
   41    | exp GT_OP exp .
   42    | exp . LET_OP exp
   43    | exp . GET_OP exp
   44    | exp . NE_OP exp

    SUB  shift, and go to state 55
    ADD  shift, and go to state 56
    MUL  shift, and go to state 57
    DIV  shift, and go to state 58

    EQ_OP   error (nonassociative)
    NE_OP   error (nonassociative)
    GET_OP  error (nonassociative)
    LET_OP  error (nonassociative)
    GT_OP   error (nonassociative)
    LT_OP   error (nonassociative)

    $default  reduce using rule 41 (exp)


State 76

   35 exp: exp . ADD exp
   36    | exp . SUB exp
   37    | exp . MUL exp
   38    | exp . DIV exp
   39    | exp . EQ_OP exp
   40    | exp . LT_OP exp
   40    | exp LT_OP exp .
   41    | exp . GT_OP exp
   42    | exp . LET_OP exp
   43    | exp . GET_OP exp
   44    | exp . NE_OP exp

    SUB  shift, and go to state 55
    ADD  shift, and go to state 56
    MUL  shift, and go to state 57
    DIV  shift, and go to state 58

    EQ_OP   error (nonassociative)
    NE_OP   error (nonassociative)
    GET_OP  error (nonassociative)
    LET_OP  error (nonassociative)
    GT_OP   error (nonassociative)
    LT_OP   error (nonassociative)

    $default  reduce using rule 40 (exp)


State 77

   35 exp: exp . ADD exp
   36    | exp . SUB exp
   36    | exp SUB exp .
   37    | exp . MUL exp
   38    | exp . DIV exp
   39    | exp . EQ_OP exp
   40    | exp . LT_OP exp
   41    | exp . GT_OP exp
   42    | exp . LET_OP exp
   43    | exp . GET_OP exp
   44    | exp . NE_OP exp

    MUL  shift, and go to state 57
    DIV  shift, and go to state 58

    $default  reduce using rule 36 (exp)


State 78

   35 exp: exp . ADD exp
   35    | exp ADD exp .
   36    | exp . SUB exp
   37    | exp . MUL exp
   38    | exp . DIV exp
   39    | exp . EQ_OP exp
   40    | exp . LT_OP exp
   41    | exp . GT_OP exp
   42    | exp . LET_OP exp
   43    | exp . GET_OP exp
   44    | exp . NE_OP exp

    MUL  shift, and go to state 57
    DIV  shift, and go to state 58

    $default  reduce using rule 35 (exp)


State 79

   35 exp: exp . ADD exp
   36    | exp . SUB exp
   37    | exp . MUL exp
   37    | exp MUL exp .
   38    | exp . DIV exp
   39    | exp . EQ_OP exp
   40    | exp . LT_OP exp
   41    | exp . GT_OP exp
   42    | exp . LET_OP exp
   43    | exp . GET_OP exp
   44    | exp . NE_OP exp

    $default  reduce using rule 37 (exp)


State 80

   35 exp: exp . ADD exp
   36    | exp . SUB exp
   37    | exp . MUL exp
   38    | exp . DIV exp
   38    | exp DIV exp .
   39    | exp . EQ_OP exp
   40    | exp . LT_OP exp
   41    | exp . GT_OP exp
   42    | exp . LET_OP exp
   43    | exp . GET_OP exp
   44    | exp . NE_OP exp

    $default  reduce using rule 38 (exp)


State 81

   16 stmt: ID ASSIGN . exp SEMI

    ID         shift, and go to state 37
    INTLIT     shift, and go to state 38
    FLOATLIT   shift, and go to state 39
    STRINGLIT  shift, and go to state 40
    BOOLLIT    shift, and go to state 41
    LPAR       shift, and go to state 42

    exp  go to state 93


State 82

    6 decl: ID LPAR . RPAR COLON type LCPAR stmts RCPAR SEMI
    7     | ID LPAR . argdefs RPAR COLON type LCPAR stmts RCPAR SEMI
   45 exp: LPAR . exp RPAR

    ID         shift, and go to state 94
    INTLIT     shift, and go to state 38
    FLOATLIT   shift, and go to state 39
    STRINGLIT  shift, and go to state 40
    BOOLLIT    shift, and go to state 41
    LPAR       shift, and go to state 42
    RPAR       shift, and go to state 16

    argdefs  go to state 17
    argdef   go to state 18
    exp      go to state 47


State 83

   15 stmt: ID exp . SEMI
   35 exp: exp . ADD exp
   36    | exp . SUB exp
   37    | exp . MUL exp
   38    | exp . DIV exp
   39    | exp . EQ_OP exp
   40    | exp . LT_OP exp
   41    | exp . GT_OP exp
   42    | exp . LET_OP exp
   43    | exp . GET_OP exp
   44    | exp . NE_OP exp

    SEMI    shift, and go to state 95
    EQ_OP   shift, and go to state 49
    NE_OP   shift, and go to state 50
    GET_OP  shift, and go to state 51
    LET_OP  shift, and go to state 52
    GT_OP   shift, and go to state 53
    LT_OP   shift, and go to state 54
    SUB     shift, and go to state 55
    ADD     shift, and go to state 56
    MUL     shift, and go to state 57
    DIV     shift, and go to state 58


State 84

   20 stmt: RETURN exp . SEMI
   35 exp: exp . ADD exp
   36    | exp . SUB exp
   37    | exp . MUL exp
   38    | exp . DIV exp
   39    | exp . EQ_OP exp
   40    | exp . LT_OP exp
   41    | exp . GT_OP exp
   42    | exp . LET_OP exp
   43    | exp . GET_OP exp
   44    | exp . NE_OP exp

    SEMI    shift, and go to state 96
    EQ_OP   shift, and go to state 49
    NE_OP   shift, and go to state 50
    GET_OP  shift, and go to state 51
    LET_OP  shift, and go to state 52
    GT_OP   shift, and go to state 53
    LT_OP   shift, and go to state 54
    SUB     shift, and go to state 55
    ADD     shift, and go to state 56
    MUL     shift, and go to state 57
    DIV     shift, and go to state 58


State 85

   19 stmt: WHILE exp . DO LCPAR stmts RCPAR SEMI
   35 exp: exp . ADD exp
   36    | exp . SUB exp
   37    | exp . MUL exp
   38    | exp . DIV exp
   39    | exp . EQ_OP exp
   40    | exp . LT_OP exp
   41    | exp . GT_OP exp
   42    | exp . LET_OP exp
   43    | exp . GET_OP exp
   44    | exp . NE_OP exp

    DO      shift, and go to state 97
    EQ_OP   shift, and go to state 49
    NE_OP   shift, and go to state 50
    GET_OP  shift, and go to state 51
    LET_OP  shift, and go to state 52
    GT_OP   shift, and go to state 53
    LT_OP   shift, and go to state 54
    SUB     shift, and go to state 55
    ADD     shift, and go to state 56
    MUL     shift, and go to state 57
    DIV     shift, and go to state 58


State 86

   17 stmt: IF exp . THEN LCPAR stmts RCPAR SEMI
   18     | IF exp . THEN LCPAR stmts RCPAR ELSE LCPAR stmts RCPAR SEMI
   35 exp: exp . ADD exp
   36    | exp . SUB exp
   37    | exp . MUL exp
   38    | exp . DIV exp
   39    | exp . EQ_OP exp
   40    | exp . LT_OP exp
   41    | exp . GT_OP exp
   42    | exp . LET_OP exp
   43    | exp . GET_OP exp
   44    | exp . NE_OP exp

    THEN    shift, and go to state 98
    EQ_OP   shift, and go to state 49
    NE_OP   shift, and go to state 50
    GET_OP  shift, and go to state 51
    LET_OP  shift, and go to state 52
    GT_OP   shift, and go to state 53
    LT_OP   shift, and go to state 54
    SUB     shift, and go to state 55
    ADD     shift, and go to state 56
    MUL     shift, and go to state 57
    DIV     shift, and go to state 58


State 87

   21 stmt: PRINT exp . SEMI
   35 exp: exp . ADD exp
   36    | exp . SUB exp
   37    | exp . MUL exp
   38    | exp . DIV exp
   39    | exp . EQ_OP exp
   40    | exp . LT_OP exp
   41    | exp . GT_OP exp
   42    | exp . LET_OP exp
   43    | exp . GET_OP exp
   44    | exp . NE_OP exp

    SEMI    shift, and go to state 99
    EQ_OP   shift, and go to state 49
    NE_OP   shift, and go to state 50
    GET_OP  shift, and go to state 51
    LET_OP  shift, and go to state 52
    GT_OP   shift, and go to state 53
    LT_OP   shift, and go to state 54
    SUB     shift, and go to state 55
    ADD     shift, and go to state 56
    MUL     shift, and go to state 57
    DIV     shift, and go to state 58


State 88

   22 stmt: INPUT exp . SEMI
   35 exp: exp . ADD exp
   36    | exp . SUB exp
   37    | exp . MUL exp
   38    | exp . DIV exp
   39    | exp . EQ_OP exp
   40    | exp . LT_OP exp
   41    | exp . GT_OP exp
   42    | exp . LET_OP exp
   43    | exp . GET_OP exp
   44    | exp . NE_OP exp

    SEMI    shift, and go to state 100
    EQ_OP   shift, and go to state 49
    NE_OP   shift, and go to state 50
    GET_OP  shift, and go to state 51
    LET_OP  shift, and go to state 52
    GT_OP   shift, and go to state 53
    LT_OP   shift, and go to state 54
    SUB     shift, and go to state 55
    ADD     shift, and go to state 56
    MUL     shift, and go to state 57
    DIV     shift, and go to state 58


State 89

    6 decl: ID LPAR RPAR COLON type LCPAR stmts RCPAR . SEMI

    SEMI  shift, and go to state 101


State 90

   13 stmts: stmt stmts .

    $default  reduce using rule 13 (stmts)


State 91

    7 decl: ID LPAR argdefs RPAR COLON type LCPAR stmts . RCPAR SEMI

    RCPAR  shift, and go to state 102


State 92

   46 exp: ID LPAR exp RPAR .

    $default  reduce using rule 46 (exp)


State 93

   16 stmt: ID ASSIGN exp . SEMI
   35 exp: exp . ADD exp
   36    | exp . SUB exp
   37    | exp . MUL exp
   38    | exp . DIV exp
   39    | exp . EQ_OP exp
   40    | exp . LT_OP exp
   41    | exp . GT_OP exp
   42    | exp . LET_OP exp
   43    | exp . GET_OP exp
   44    | exp . NE_OP exp

    SEMI    shift, and go to state 103
    EQ_OP   shift, and go to state 49
    NE_OP   shift, and go to state 50
    GET_OP  shift, and go to state 51
    LET_OP  shift, and go to state 52
    GT_OP   shift, and go to state 53
    LT_OP   shift, and go to state 54
    SUB     shift, and go to state 55
    ADD     shift, and go to state 56
    MUL     shift, and go to state 57
    DIV     shift, and go to state 58


State 94

   11 argdef: ID . COLON type
   34 exp: ID .
   46    | ID . LPAR exp RPAR

    COLON  shift, and go to state 26
    LPAR   shift, and go to state 46

    $default  reduce using rule 34 (exp)


State 95

   15 stmt: ID exp SEMI .

    $default  reduce using rule 15 (stmt)


State 96

   20 stmt: RETURN exp SEMI .

    $default  reduce using rule 20 (stmt)


State 97

   19 stmt: WHILE exp DO . LCPAR stmts RCPAR SEMI

    LCPAR  shift, and go to state 104


State 98

   17 stmt: IF exp THEN . LCPAR stmts RCPAR SEMI
   18     | IF exp THEN . LCPAR stmts RCPAR ELSE LCPAR stmts RCPAR SEMI

    LCPAR  shift, and go to state 105


State 99

   21 stmt: PRINT exp SEMI .

    $default  reduce using rule 21 (stmt)


State 100

   22 stmt: INPUT exp SEMI .

    $default  reduce using rule 22 (stmt)


State 101

    6 decl: ID LPAR RPAR COLON type LCPAR stmts RCPAR SEMI .

    $default  reduce using rule 6 (decl)


State 102

    7 decl: ID LPAR argdefs RPAR COLON type LCPAR stmts RCPAR . SEMI

    SEMI  shift, and go to state 106


State 103

   16 stmt: ID ASSIGN exp SEMI .

    $default  reduce using rule 16 (stmt)


State 104

   19 stmt: WHILE exp DO LCPAR . stmts RCPAR SEMI

    ID      shift, and go to state 59
    DEFINE  shift, and go to state 2
    RETURN  shift, and go to state 60
    WHILE   shift, and go to state 61
    IF      shift, and go to state 62
    PRINT   shift, and go to state 63
    INPUT   shift, and go to state 64

    decl   go to state 65
    stmts  go to state 107
    stmt   go to state 67
    ids    go to state 6


State 105

   17 stmt: IF exp THEN LCPAR . stmts RCPAR SEMI
   18     | IF exp THEN LCPAR . stmts RCPAR ELSE LCPAR stmts RCPAR SEMI

    ID      shift, and go to state 59
    DEFINE  shift, and go to state 2
    RETURN  shift, and go to state 60
    WHILE   shift, and go to state 61
    IF      shift, and go to state 62
    PRINT   shift, and go to state 63
    INPUT   shift, and go to state 64

    decl   go to state 65
    stmts  go to state 108
    stmt   go to state 67
    ids    go to state 6


State 106

    7 decl: ID LPAR argdefs RPAR COLON type LCPAR stmts RCPAR SEMI .

    $default  reduce using rule 7 (decl)


State 107

   19 stmt: WHILE exp DO LCPAR stmts . RCPAR SEMI

    RCPAR  shift, and go to state 109


State 108

   17 stmt: IF exp THEN LCPAR stmts . RCPAR SEMI
   18     | IF exp THEN LCPAR stmts . RCPAR ELSE LCPAR stmts RCPAR SEMI

    RCPAR  shift, and go to state 110


State 109

   19 stmt: WHILE exp DO LCPAR stmts RCPAR . SEMI

    SEMI  shift, and go to state 111


State 110

   17 stmt: IF exp THEN LCPAR stmts RCPAR . SEMI
   18     | IF exp THEN LCPAR stmts RCPAR . ELSE LCPAR stmts RCPAR SEMI

    ELSE  shift, and go to state 112
    SEMI  shift, and go to state 113


State 111

   19 stmt: WHILE exp DO LCPAR stmts RCPAR SEMI .

    $default  reduce using rule 19 (stmt)


State 112

   18 stmt: IF exp THEN LCPAR stmts RCPAR ELSE . LCPAR stmts RCPAR SEMI

    LCPAR  shift, and go to state 114


State 113

   17 stmt: IF exp THEN LCPAR stmts RCPAR SEMI .

    $default  reduce using rule 17 (stmt)


State 114

   18 stmt: IF exp THEN LCPAR stmts RCPAR ELSE LCPAR . stmts RCPAR SEMI

    ID      shift, and go to state 59
    DEFINE  shift, and go to state 2
    RETURN  shift, and go to state 60
    WHILE   shift, and go to state 61
    IF      shift, and go to state 62
    PRINT   shift, and go to state 63
    INPUT   shift, and go to state 64

    decl   go to state 65
    stmts  go to state 115
    stmt   go to state 67
    ids    go to state 6


State 115

   18 stmt: IF exp THEN LCPAR stmts RCPAR ELSE LCPAR stmts . RCPAR SEMI

    RCPAR  shift, and go to state 116


State 116

   18 stmt: IF exp THEN LCPAR stmts RCPAR ELSE LCPAR stmts RCPAR . SEMI

    SEMI  shift, and go to state 117


State 117

   18 stmt: IF exp THEN LCPAR stmts RCPAR ELSE LCPAR stmts RCPAR SEMI .

    $default  reduce using rule 18 (stmt)
