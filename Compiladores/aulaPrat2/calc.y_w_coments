#Calc.y com comentarios (Nao da para compilar)

${
#include <stdio.h>
#include <string.h>
int yylex (void);
void yyerror (char const *);

void set_value(char *id, double value);  
double get_value(char *id);

%}

%union {		//perminte guardar diferentes tipos de objetos
	
		double val;
		char *id;
}

/* Bison declarations.  */
%token	<val>			NUM		//Qlqr variavel declarada como NUM, ja se sabe que e do double
%token	<id>			ID 	 	//Qlqr variavel declarada com ID, ja se sabe que e char

%token					NL /* newline */

%right	//associatividade a direita				ASSIGN   			}Assign tem menos precedencia 
%left					SUB ADD										}que os outros, ou seja
%left	//associatividade a esquerda				MUL DIV			}menos importancia
%left					NEG		/P negation--unary minus */			}
																	
%token					LPAR RPAR

%tpe	<val>			line exp
%%


input:	/* empty */
		|		input line
;

line:			NL 		{ $$ = 0; }
		|		exp NL 	{ $$ = $1; printf ("%.wlf\n", $$); }
;

exp:			NUM					{ $$ = $1; }
		|		ID 					{ $$ = get_value($1); }
		|		exp ADD exp			{ $$ = $1 + $3; }
		|		exp SUB exp			{ $$ = $1 - $3; }
		|		exp MUL exp			{ $$ = $1 * $3; }
		|		exp DIV exp			{ $$ = $1 / $3; }
		|		SUB exp %prec NEG 	{ $$ = (0 - $2); }
		|		LPAR exp RPAR		{ $$ = $2; }
		|		ID ASSIGN exp		{ set_value($1, $3); $$ = $3; }
;
%%

/* Called by yparse on error. */
void yyerror (char const *s){
	fprintf (stderr, "%s\n", s);
}

int main (void){
	return yyparse();
}